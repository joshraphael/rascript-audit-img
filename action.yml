name: RAScript Audit
description: Compiles an RAScript for RetroAchievements development and performs an audit on the code.
author: joshraphael

inputs:
  game-id:
    description: "RetroAchievements game id"
    type: number
    required: true
  rascript:
    description: "The RAScript file name to compile (not including .rascript)"
    type: string
    required: true
  report:
    description: "Create a report of the audit"
    type: boolean
    required: false
  severity:
    description: "Level of severity to fail on"
    type: choice
    required: false
    options: 
      - info
      - warn
      - error

branding:
  color: blue
  icon: award

runs:
  using: "composite"
  steps:
    - name: Set Environment
      env:
        RATOOLS: v1.15.0
        DOTNET_DIR: C:\\Programs\\dotnet
      id: env
      shell: bash
      run: |
        echo "RATOOLS_VERSION=${{env.RATOOLS}}" >> "${GITHUB_OUTPUT}"
        echo "RATOOLS_DIR=~/Installs/RATools-${{env.RATOOLS}}" >> "${GITHUB_OUTPUT}"
        echo "RALIBRETRO_DIR=~/Installs/RALibretro-x64" >> "${GITHUB_OUTPUT}"
        echo "DOTNET_ROOT_X64=${{env.DOTNET_DIR}}" >> "${GITHUB_OUTPUT}"
        echo "DOTNET_ROOT=${{env.DOTNET_DIR}}" >> "${GITHUB_OUTPUT}"
        echo "WINEPATH=${{env.DOTNET_DIR}}" >> "${GITHUB_OUTPUT}"

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: '^1.23.0'

    - name: Create Folders
      shell: bash
      run: mkdir -p ${{ steps.env.outputs.RATOOLS_DIR }} && mkdir -p ${{ steps.env.outputs.RALIBRETRO_DIR }}/RACache/Data

    - name: Install Wine
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y wine

    - name: Set Winecfg
      shell: bash
      run: winecfg /v win10

    - name: Get RATools CLI
      shell: bash
      run: wget -O ${{ steps.env.outputs.RATOOLS_DIR }}/RATools-${{ steps.env.outputs.RATOOLS_VERSION }}.zip "https://github.com/Jamiras/RATools/releases/download/${{ steps.env.outputs.RATOOLS_VERSION }}/RATools-${{ steps.env.outputs.RATOOLS_VERSION }}.zip"

    - name: Unpack RATools
      shell: bash
      run: unzip ${{ steps.env.outputs.RATOOLS_DIR }}/RATools-${{ steps.env.outputs.RATOOLS_VERSION }}.zip -d ${{ steps.env.outputs.RATOOLS_DIR }}

    - name: Get .NET SDK 6.0.428
      id: dotnet-sdk
      env:
        INSTALL_DIR: .wine/drive_c/Programs/dotnet
      shell: bash
      run: |
        mkdir -p ${APP_DIR}/${INSTALL_DIR}
        wget -O "${APP_DIR}/${INSTALL_DIR}/dotnet-sdk.zip" "https://download.visualstudio.microsoft.com/download/pr/5b2c6cee-abe2-4734-a099-729a346205e7/b5776361ebee2e1eeed9be4aad944652/dotnet-sdk-6.0.428-win-x64.zip"
        unzip "${APP_DIR}/${INSTALL_DIR}/dotnet-sdk.zip" -d "${APP_DIR}/${INSTALL_DIR}"

    - name: Get Code Notes
      id: code-notes
      env:
        GAME_ID: ${{ inputs.game-id }}
      shell: bash
      run: cd ${{ github.action_path }}/ && go get -t ./... && go run main.go > ${{ steps.env.outputs.RALIBRETRO_DIR }}/RACache/Data/${GAME_ID}-Notes.json

    - name: Compile RAScript
      id: compile-rascript
      env:
        DOTNET_ROOT_X64: ${{ steps.env.outputs.DOTNET_ROOT_X64 }}
        DOTNET_ROOT: ${{ steps.env.outputs.DOTNET_ROOT }}
        WINEPATH: ${{ steps.env.outputs.WINEPATH }}
      shell: bash
      run: touch ${{ steps.env.outputs.RALIBRETRO_DIR }}/RACache/Data/${{ inputs.game-id }}.json && wine ${{ steps.env.outputs.RATOOLS_DIR }}/rascript-cli.exe -i ${{ inputs.rascript }}.rascript -o ${{ steps.env.outputs.RALIBRETRO_DIR }}

    - name: Upload Code Notes
      uses: actions/upload-artifact@v4
      with:
        name: notes-json
        path: ${{ steps.env.outputs.RALIBRETRO_DIR }}/RACache/Data/${{ inputs.game-id }}-Notes.json
      
    - name: Upload Achievement and Leaderboard Code
      uses: actions/upload-artifact@v4
      with:
        name: user-text
        path: ${{ steps.env.outputs.RALIBRETRO_DIR }}/RACache/Data/${{ inputs.game-id }}-User.txt
      
    - name: Upload Rich Presence
      uses: actions/upload-artifact@v4
      with:
        name: rich-text
        path: ${{ steps.env.outputs.RALIBRETRO_DIR }}/RACache/Data/${{ inputs.game-id }}-Rich.txt

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Checkout autocr-cli
      uses: actions/checkout@v4
      with:
        repository: joshraphael/autocr-cli
        ref: v1.1.5

    - name: Download Code Notes
      uses: actions/download-artifact@v4
      with:
        name: notes-json
      
    - name: Download Achievement and Leaderboard Code
      uses: actions/download-artifact@v4
      with:
        name: user-text
      
    - name: Download Rich Presence
      uses: actions/download-artifact@v4
      with:
        name: rich-text

    - name: Run AutoCR
      shell: bash
      run: ./index.js --notes ${{ inputs.game-id }}-Notes.json --user ${{ inputs.game-id }}-User.txt --rich ${{ inputs.game-id }}-Rich.txt${{ inputs.severity != '' && format(' --severity {0}', inputs.severity) || '' }}${{ inputs.report == 'true' && ' --report' || '' }}